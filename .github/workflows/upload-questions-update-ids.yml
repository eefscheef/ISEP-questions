name: Update IDs for Changed Files

on:
  push:
    branches:
      - main # Adjust as needed for your workflow

jobs:
  update-ids:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4
        with:
          ssh-key: ${{ secrets.DEPLOY_KEY }}
          fetch-depth: 0 # Ensure we fetch the full history so we can git diff

      - name: Set up JDK 21
        uses: actions/setup-java@v4.5.0
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Identify Changed Files
        id: changed-files
        run: |
          git diff --name-only HEAD^ HEAD questions > changed_files.txt
          echo "files=$(cat changed_files.txt | tr '\n' ' ')" >> $GITHUB_ENV

      - name: Build and Run Parser
        run: |
          cd uploader
          ./gradlew build
          ./gradlew run --args="upload $files"
          cd ..
        env:
          JDBC_URL: ${{ secrets.JDBC_URL }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

      - name: Check for File Changes
        id: check-diff
        run: |
          if git diff --quiet; then
            echo "changed=false" >> $GITHUB_ENV
          else
            echo "changed=true" >> $GITHUB_ENV
          fi

      - name: Commit and Push Changes
        if: env.changed == 'true'
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add .
          git commit -m "Update IDs of changed/added question files"
          git push

      - name: Get Commit Hash
        id: get-commit-hash
        if: env.changed == 'true'
        run: echo "hash=$(git rev-parse HEAD)" >> $GITHUB_ENV

      - name: Update assessments with newest
        if: env.changed == 'true'
        run: |
          cd uploader
          ./gradlew build
          ./gradlew run --args="hash --commit $hash"
        env:
          JDBC_URL: ${{ secrets.JDBC_URL }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
